{"version":3,"sources":["TodosContext.jsx","customHooks.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","TodoApp.js","index.js"],"names":["TodosContext","React","createContext","todos","setNewTodos","TodosProvider","children","key","initialValue","useState","JSON","parse","localStorage","getItem","value","setValue","newValue","setItem","stringify","useLocalStorage","contextValue","useMemo","Provider","TodoItem","id","title","completed","useContext","editing","setIsEditing","editingInputValue","setEditingValue","currentIndex","findIndex","todo","document","addEventListener","event","stopPropagation","target","classList","contains","className","classNames","onDoubleClick","type","checked","onChange","slice","onClick","onKeyDown","TodoList","items","map","item","TodosFilter","filterTodos","active","setActive","useEffect","href","activeTodos","filter","TodoApp","isAllChecked","every","currentTodos","setCurrentTodos","inputedValue","setIputValue","toggleAll","setToggleAll","onSubmit","preventDefault","Date","placeholder","length","htmlFor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3837418d.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './customHooks';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setNewTodos: () => {},\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setNewTodos] = useLocalStorage('todos', []);\n  const contextValue = useMemo(() => (\n    {\n      todos,\n      setNewTodos,\n    }\n  ), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  /* eslint-disable */\n  children: PropTypes.object.isRequired,\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (newValue) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, save];\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoItem = ({ id, title, completed }) => {\n  const { todos, setNewTodos } = useContext(TodosContext);\n  const [editing, setIsEditing] = useState(false);\n  const [editingInputValue, setEditingValue] = useState(title);\n  const currentIndex = todos.findIndex(todo => todo.id === id);\n\n  const checkboxChangeHandle = () => {\n    setNewTodos([\n      ...todos.slice(0, currentIndex),\n      {\n        ...todos[currentIndex],\n        completed: !todos[currentIndex].completed,\n      },\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  const deleteTodoHandle = () => {\n    setNewTodos([\n      ...todos.slice(0, currentIndex),\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  document.addEventListener('click', (event) => {\n    event.stopPropagation();\n    if (event.target.classList.contains('edit')\n      || event.target.classList.contains('new-todo')) {\n      return;\n    }\n\n    setIsEditing(false);\n  });\n\n  return (\n    <li\n      key={id}\n      className={classNames({ completed }, { editing })}\n      onDoubleClick={\n        () => {\n          setIsEditing(true);\n        }\n      }\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={checkboxChangeHandle}\n\n        />\n        <label>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodoHandle}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editingInputValue}\n        onChange={\n          (event) => {\n            setEditingValue(event.target.value);\n          }\n        }\n        onKeyDown={\n          (event) => {\n            if (event.key === 'Escape') {\n              setIsEditing(false);\n            }\n\n            if (event.key === 'Enter') {\n              setNewTodos([\n                ...todos.slice(0, currentIndex),\n                {\n                  ...todos[currentIndex],\n                  title: editingInputValue,\n                },\n                ...todos.slice(currentIndex + 1),\n              ]);\n              setIsEditing(false);\n            }\n          }\n        }\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ items }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n\n      <TodoItem\n        id={item.id}\n        title={item.title}\n        completed={item.completed}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodosFilter = ({ filterTodos }) => {\n  const { todos } = useContext(TodosContext);\n  const [active, setActive] = useState('all');\n\n  const showAllTodosHandler = () => {\n    filterTodos(todos);\n    setActive('all');\n  };\n\n  useEffect(() => {\n    setActive('all');\n  }, [todos]);\n\n  const showActiveTodosHandler = () => {\n    const activeTodos = todos.filter(todo => todo.completed === false);\n\n    filterTodos(activeTodos);\n    setActive('active');\n  };\n\n  const showComplitedTodos = () => {\n    const activeTodos = todos.filter(todo => todo.completed === true);\n\n    filterTodos(activeTodos);\n    setActive('completed');\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={active === 'all' && 'selected'}\n          onClick={showAllTodosHandler}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={active === 'active' && 'selected'}\n          onClick={showActiveTodosHandler}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={active === 'completed' && 'selected'}\n          onClick={showComplitedTodos}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nexport const TodoApp = () => {\n  const { todos, setNewTodos } = useContext(TodosContext);\n  const isAllChecked = todos.every(todo => todo.completed === true);\n  const [currentTodos, setCurrentTodos] = useState(todos);\n  const [inputedValue, setIputValue] = useState('');\n  const [toggleAll, setToggleAll] = useState(isAllChecked);\n\n  useEffect(() => {\n    setToggleAll(isAllChecked);\n    setCurrentTodos(todos);\n  }, [todos]);\n\n  const toggleAllItems = () => {\n    if (!isAllChecked) {\n      setNewTodos(\n        todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      );\n    } else {\n      setNewTodos(\n        todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n      );\n    }\n  };\n\n  const writeTodo = (event) => {\n    event.preventDefault();\n    if (inputedValue === '') {\n      return;\n    }\n\n    setNewTodos([\n      ...todos,\n      {\n        id: +new Date(),\n        title: inputedValue,\n        completed: false,\n      },\n    ]);\n    setIputValue('');\n  };\n\n  const clearCompleted = () => {\n    setNewTodos(todos.filter(todo => todo.completed === false));\n  };\n\n  return (\n    /* eslint-disable */\n    <section\n      className=\"todoapp\"\n    >\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={writeTodo}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={inputedValue}\n            onChange={(event) => {\n              setIputValue(event.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={toggleAllItems}\n        />\n        {!!todos.length && (\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        )}\n\n        <TodoList\n          items={currentTodos}\n        />\n      </section>\n\n\n        {!!todos.length && (\n          <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${todos.filter(todo => todo.completed === false).length} items left`}\n          </span>\n          <TodosFilter\n          filterTodos={setCurrentTodos}\n          />\n          {!!todos.filter(todo => todo.completed === true).length && (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={clearCompleted}\n          >\n            Clear completed\n          </button>)}\n      </footer>\n        )}\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { TodoApp } from './TodoApp';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <TodoApp />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}