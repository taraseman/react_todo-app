{"version":3,"sources":["TodosContext.jsx","customHooks.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","TodoApp.js","index.js"],"names":["TodosContext","React","createContext","todos","setTodos","TodosProvider","children","key","initialValue","useState","JSON","parse","localStorage","getItem","value","setValue","newValue","setItem","stringify","useLocalStorage","contextValue","useMemo","Provider","TodoItem","id","title","completed","useContext","isEditing","setIsEditing","editingInputValue","setEditingValue","currentIndex","findIndex","todo","document","addEventListener","event","stopPropagation","target","classList","contains","className","classNames","editing","onDoubleClick","type","checked","onChange","slice","onClick","onKeyDown","TodoList","map","item","TodosFilter","filterTodos","isActive","setActive","useEffect","href","activeTodos","filter","TodoApp","isAllChecked","every","currentTodos","setCurrentTodos","inputedValue","setIputValue","toggleAll","setToggleAll","onSubmit","preventDefault","Date","placeholder","length","htmlFor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8a677dcc.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './customHooks';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setTodos: () => {},\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const contextValue = useMemo(() => (\n    {\n      todos,\n      setTodos,\n    }\n  ), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (newValue) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, save];\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoItem = ({ id, title, completed }) => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingInputValue, setEditingValue] = useState(title);\n  const currentIndex = todos.findIndex(todo => todo.id === id);\n\n  const handleCheckboxChange = () => {\n    setTodos([\n      ...todos.slice(0, currentIndex),\n      {\n        ...todos[currentIndex],\n        completed: !todos[currentIndex].completed,\n      },\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  const deleteTodoHandle = () => {\n    setTodos([\n      ...todos.slice(0, currentIndex),\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  const pressKeyHandler = (event) => {\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n      setEditingValue(title);\n    }\n\n    if (event.key === 'Enter') {\n      if (editingInputValue === '') {\n        return;\n      }\n\n      setTodos([\n        ...todos.slice(0, currentIndex),\n        {\n          ...todos[currentIndex],\n          title: editingInputValue,\n        },\n        ...todos.slice(currentIndex + 1),\n      ]);\n      setIsEditing(false);\n    }\n  };\n\n  document.addEventListener('click', (event) => {\n    event.stopPropagation();\n    if (event.target.classList.contains('edit')\n      || event.target.classList.contains('new-todo')) {\n      return;\n    }\n\n    setIsEditing(false);\n  });\n\n  return (\n    <li\n      key={id}\n      className={classNames({ completed }, { editing: isEditing })}\n      onDoubleClick={\n        () => {\n          setIsEditing(true);\n        }\n      }\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={handleCheckboxChange}\n\n        />\n        <label>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodoHandle}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editingInputValue}\n        onChange={\n          (event) => {\n            setEditingValue(event.target.value);\n          }\n        }\n        onKeyDown={pressKeyHandler}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(item => (\n      <TodoItem\n        id={item.id}\n        title={item.title}\n        completed={item.completed}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodosFilter = ({ filterTodos }) => {\n  const { todos } = useContext(TodosContext);\n  const [isActive, setActive] = useState('all');\n\n  const showAllTodosHandler = () => {\n    filterTodos(todos);\n    setActive('all');\n  };\n\n  useEffect(() => {\n    setActive('all');\n  }, [todos]);\n\n  const showActiveTodosHandler = () => {\n    const activeTodos = todos.filter(todo => todo.completed === false);\n\n    filterTodos(activeTodos);\n    setActive('active');\n  };\n\n  const showComplitedTodos = () => {\n    const activeTodos = todos.filter(todo => todo.completed === true);\n\n    filterTodos(activeTodos);\n    setActive('completed');\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={isActive === 'all' && 'selected'}\n          onClick={showAllTodosHandler}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={isActive === 'active' && 'selected'}\n          onClick={showActiveTodosHandler}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={isActive === 'completed' && 'selected'}\n          onClick={showComplitedTodos}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nexport const TodoApp = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const isAllChecked = todos.every(todo => todo.completed);\n  const [currentTodos, setCurrentTodos] = useState(todos);\n  const [inputedValue, setIputValue] = useState('');\n  const [toggleAll, setToggleAll] = useState(isAllChecked);\n\n  useEffect(() => {\n    setToggleAll(isAllChecked);\n    setCurrentTodos(todos);\n  }, [todos]);\n\n  const toggleAllItems = () => {\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        completed: !isAllChecked,\n      })),\n    );\n  };\n\n  const addTodo = (event) => {\n    event.preventDefault();\n    if (inputedValue === '') {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      { id: +new Date(),\n        title: inputedValue,\n        completed: false },\n    ]);\n    setIputValue('');\n  };\n\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={addTodo}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={inputedValue}\n            onChange={(event) => {\n              setIputValue(event.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={toggleAllItems}\n        />\n        {!!todos.length && (\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        )}\n\n        <TodoList\n          todos={currentTodos}\n        />\n      </section>\n      {!!todos.length && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${todos.filter(todo => !todo.completed).length}\n            items left`}\n          </span>\n          <TodosFilter\n            filterTodos={setCurrentTodos}\n          />\n          {!!todos.filter(todo => todo.completed).length\n          && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={clearCompleted}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { TodoApp } from './TodoApp';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <TodoApp />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}