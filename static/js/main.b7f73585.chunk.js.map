{"version":3,"sources":["TodosContext.jsx","customHooks.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","TodoApp.js","index.js"],"names":["initialState","TodosContext","React","createContext","todos","setNewTodos","GlobalState","TodosProvider","children","key","initialValue","useState","JSON","parse","localStorage","getItem","value","setValue","newValue","setItem","stringify","useLocalStorage","contextValue","useMemo","Provider","TodoItem","id","title","completed","useContext","state","editing","setIsEditing","editingInputValue","setEditingValue","currentIndex","findIndex","todo","fun","className","classNames","onDoubleClick","type","checked","onChange","slice","onClick","event","target","onKeyDown","TodoList","items","map","item","TodosFilter","filterTodos","active","setActive","useEffect","href","activeTodos","filter","TodoApp","isAllChecked","every","currentTodos","setCurrentTodos","inputedValue","setIputValue","toggleAll","setToggleAll","classList","contains","onSubmit","preventDefault","Date","placeholder","htmlFor","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f73585.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './customHooks';\n\nconst initialState = {};\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setNewTodos: () => {},\n});\n\nexport const GlobalState = React.createContext(initialState);\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setNewTodos] = useLocalStorage('todos', []);\n  const contextValue = useMemo(() => (\n    {\n      todos,\n      setNewTodos,\n    }\n  ), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      <GlobalState.Provider value={initialState}>\n        {children}\n      </GlobalState.Provider>\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  /* eslint-disable */\n  children: PropTypes.object.isRequired,\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (newValue) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, save];\n};\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TodosContext, GlobalState } from '../../TodosContext';\n\nexport const TodoItem = ({ id, title, completed }) => {\n  const { todos, setNewTodos } = useContext(TodosContext);\n  const state = useContext(GlobalState);\n  const [editing, setIsEditing] = useState(false);\n  const [editingInputValue, setEditingValue] = useState(title);\n  const currentIndex = todos.findIndex(todo => todo.id === id);\n\n  state.fun = () => {\n    setIsEditing(false);\n  };\n\n  const checkboxChangeHandle = () => {\n    setNewTodos([\n      ...todos.slice(0, currentIndex),\n      {\n        ...todos[currentIndex],\n        completed: !todos[currentIndex].completed,\n      },\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  const deleteTodoHandle = () => {\n    setNewTodos([\n      ...todos.slice(0, currentIndex),\n      ...todos.slice(currentIndex + 1),\n    ]);\n  };\n\n  return (\n    <li\n      key={id}\n      className={classNames({ completed }, { editing })}\n      onDoubleClick={\n        () => {\n          setIsEditing(true);\n        }\n      }\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={checkboxChangeHandle}\n\n        />\n        <label>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodoHandle}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editingInputValue}\n        onChange={\n          (event) => {\n            setEditingValue(event.target.value);\n          }\n        }\n        onKeyDown={\n          (event) => {\n            if (event.key === 'Escape') {\n              setIsEditing(false);\n            }\n\n            if (event.key === 'Enter') {\n              setNewTodos([\n                ...todos.slice(0, currentIndex),\n                {\n                  ...todos[currentIndex],\n                  title: editingInputValue,\n                },\n                ...todos.slice(currentIndex + 1),\n              ]);\n              setIsEditing(false);\n            }\n          }\n        }\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ items }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n\n      <TodoItem\n        id={item.id}\n        title={item.title}\n        completed={item.completed}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodosFilter = ({ filterTodos }) => {\n  const { todos } = useContext(TodosContext);\n  const [active, setActive] = useState('all');\n\n  const showAllTodosHandler = () => {\n    filterTodos(todos);\n    setActive('all');\n  };\n\n  useEffect(() => {\n    setActive('all');\n  }, [todos]);\n\n  const showActiveTodosHandler = () => {\n    const activeTodos = todos.filter(todo => todo.completed === false);\n\n    filterTodos(activeTodos);\n    setActive('active');\n  };\n\n  const showComplitedTodos = () => {\n    const activeTodos = todos.filter(todo => todo.completed === true);\n\n    filterTodos(activeTodos);\n    setActive('completed');\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={active === 'all' && 'selected'}\n          onClick={showAllTodosHandler}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={active === 'active' && 'selected'}\n          onClick={showActiveTodosHandler}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={active === 'completed' && 'selected'}\n          onClick={showComplitedTodos}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TodosContext, GlobalState } from './TodosContext';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nexport const TodoApp = () => {\n  const { todos, setNewTodos } = useContext(TodosContext);\n  const state = useContext(GlobalState);\n  const isAllChecked = todos.every(todo => todo.completed === true);\n  const [currentTodos, setCurrentTodos] = useState(todos);\n  const [inputedValue, setIputValue] = useState('');\n  const [toggleAll, setToggleAll] = useState(isAllChecked);\n\n  useEffect(() => {\n    setToggleAll(isAllChecked);\n    setCurrentTodos(todos);\n  }, [todos]);\n\n  const toggleAllItems = () => {\n    if (!isAllChecked) {\n      setNewTodos(\n        todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      );\n    } else {\n      setNewTodos(\n        todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n      );\n    }\n  };\n\n  const writeTodo = (event) => {\n    event.preventDefault();\n    setNewTodos([\n      ...todos,\n      {\n        id: +new Date(),\n        title: inputedValue,\n        completed: false,\n      },\n    ]);\n    setIputValue('');\n  };\n\n  const clearCompleted = () => {\n    setNewTodos(todos.filter(todo => todo.completed === false));\n  };\n\n  return (\n    /* eslint-disable */\n    <section\n      className=\"todoapp\"\n      onClick={\n        (event)=> {\n          if(event.target.classList.contains('edit')\n            || event.target.classList.contains('new-todo')) {\n            return;\n          } else {\n            state.fun();\n          }\n\n        }\n      }\n    >\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={writeTodo}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={inputedValue}\n            onChange={(event) => {\n              setIputValue(event.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAll}\n          onChange={toggleAllItems}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList\n          items={currentTodos}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${todos.length} items left`}\n        </span>\n\n        <TodosFilter\n          filterTodos={setCurrentTodos}\n        />\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { TodoApp } from './TodoApp';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <TodoApp />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}